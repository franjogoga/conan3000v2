<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Data.venta.pago">
<select id="searchPago" parameterType="IngSoft.venta.bean.CriterioPagoBeanData" resultType="IngSoft.venta.bean.ResultadoPagoBeanData">
select 
distinct PERSONA.IdPersona idSocio 
,CUOTA.NumCuota as numCuota
,CUOTA.IdCuota as idCuota
,CUOTA.Monto as monto
,CUOTA.Cantidad as cantidad
,CONCAT(PERSONA.Nombres,' ',PERSONA.ApePaterno,' ',PERSONA.ApeMaterno) as socio
,CUOTA.FechaEmision as fechaEmision
,CUOTA.FechaVencimiento as fechaVencimiento
,CUOTA.Estado as estadoCuota
from CUOTA, DETALLE_CUOTA, MEMBRESIA, PERSONA
<where>
	<if test="socio != null">
	
	CUOTA.IdDetalleCuota=DETALLE_CUOTA.IdDetalleCuota and DETALLE_CUOTA.IdMembresia=MEMBRESIA.IdMembresia and MEMBRESIA.idSocio=PERSONA.IdPersona and (PERSONA.Nombres like #{socio} or PERSONA.ApePaterno like #{socio} or PERSONA.ApeMaterno like #{socio}) 
  </if>
  
  <if test="idSocio != null">
        AND PERSONA.IdPersona = #{idSocio}
    </if>
 
  
  <if test="fechaVencimientoIni != null">
        AND CUOTA.FechaVencimiento &gt;= #{fechaVencimientoIni}
    </if>
    <if test="fechaVencimientoFin != null">
        AND CUOTA.FechaVencimiento &lt;= #{fechaVencimientoFin}
    </if>
  
    <if test="estado != null">
        AND (CUOTA.Estado= #{estado} or CUOTA.Estado='Vencido')
       
    </if>
   ORDER BY CUOTA.fechaVencimiento ASC
      
</where>
</select>


<select id="searchPagado" parameterType="IngSoft.venta.bean.CriterioPagoBeanData" resultType="IngSoft.venta.bean.ResultadoPagoBeanData">
select 
distinct PERSONA.IdPersona idSocio 
,CUOTA.NumCuota as numCuota
,CUOTA.IdCuota as idCuota
,CUOTA.Monto as monto
,CUOTA.Cantidad as cantidad
,CONCAT(PERSONA.Nombres,' ',PERSONA.ApePaterno,' ',PERSONA.ApeMaterno) as socio
,CUOTA.FechaEmision as fechaEmision
,CUOTA.FechaVencimiento as fechaVencimiento
,CUOTA.Estado as estadoCuota
from CUOTA, DETALLE_CUOTA, MEMBRESIA, PERSONA, INGRESO
<where>
	<if test="socio != null">
	CUOTA.IdDetalleCuota=DETALLE_CUOTA.IdDetalleCuota and DETALLE_CUOTA.IdMembresia=MEMBRESIA.IdMembresia and MEMBRESIA.idSocio=PERSONA.IdPersona and (PERSONA.Nombres like #{socio} or PERSONA.ApePaterno like #{socio} or PERSONA.ApeMaterno like #{socio})
  </if>
  
  <if test="idSocio != null">
        AND PERSONA.IdPersona = #{idSocio}
    </if>
  
  <if test="fechaPagoIni != null">
        AND INGRESO.FechaPago &gt;= #{fechaPagoIni}
    </if>
    <if test="fechaPagoFin != null">
        AND INGRESO.FechaPago &lt;= #{fechaPagoFin}
    </if>
  
    <if test="estado != null">
        AND CUOTA.Estado= #{estado}
       
    </if>
   ORDER BY CUOTA.fechaVencimiento ASC
      
</where>
</select>

<select id="getPagoMembresia" parameterType="java.lang.String"  resultType="IngSoft.venta.bean.PagoBeanData">
select 
PERSONA.IdPersona idSocio 
,CUOTA.NumCuota as numCuota
,CUOTA.IdCuota as idCuota
,CUOTA.Monto as monto
,CUOTA.Cantidad as cantidad
,CONCAT(PERSONA.Nombres,' ',PERSONA.ApePaterno,' ',PERSONA.ApeMaterno) as socio
,CUOTA.FechaEmision as fechaEmision
,CUOTA.FechaVencimiento as fechaVencimiento
,CUOTA.Estado as estadoCuota

 
from CUOTA,DETALLE_CUOTA, MEMBRESIA, PERSONA  where CUOTA.IdDetalleCuota=DETALLE_CUOTA.IdDetalleCuota and DETALLE_CUOTA.IdMembresia=MEMBRESIA.IdMembresia and CUOTA.IdCuota=#{codigo} and MEMBRESIA.IdSocio=PERSONA.IdPersona; 


</select>



 <!-- Modificar elemento -->
<update id="registrarPago" parameterType="IngSoft.venta.bean.PagoBeanData">
update CUOTA set Estado='Cancelado'
 where IdCuota= #{idCuota}
</update>

<update id="activarPago" parameterType="IngSoft.venta.bean.PagoBeanData">
update MEMBRESIA set Estado='Activo'
 where IdMembresia= #{idMembresia}
</update>

<update id="vencidoMembresiaPago" parameterType="IngSoft.venta.bean.PagoBeanData">
update MEMBRESIA M, CUOTA C, DETALLE_CUOTA D set M.Estado='Vencido'
 where  C.Estado='Vencido' and D.IdDetalleCuota=C.IdDetalleCuota and  M.IdMembresia=D.IdMembresia 
 and M.Estado!='Eliminado'
</update>

<select id="getIdMembresia" parameterType="IngSoft.venta.bean.PagoBeanData" resultType="java.lang.String">
	select max(M.IdMembresia) from DETALLE_CUOTA D, CUOTA C, MEMBRESIA M 
	WHERE D.IdDetalleCuota=C.IdDetalleCuota and D.IdMembresia=M.IdMembresia and C.IdCuota=#{idCuota}
</select>


 <!-- Modificar elemento -->
<update id="anularPago" parameterType="IngSoft.venta.bean.PagoBeanData">
update CUOTA set Estado='No Cancelado'
 where IdCuota= #{idCuota}
</update>


<!-- Agregar plantilla membresia -->
<insert id="insertIngreso" parameterType="IngSoft.venta.bean.MembresiaBeanData" flushCache="true">
	insert into INGRESO(IdIngreso,FechaPago,Estado,idCuota)
	values (#{idIngreso},#{fechaPago},'Cancelado',#{idCuota})
</insert>

<select id="getNextCodigo2" resultType="java.lang.String">
	select max(IdIngreso) from INGRESO
</select>


 <!-- Modificar elemento -->
<update id="deletePago" parameterType="IngSoft.venta.bean.PagoBeanData">
update CUOTA set Estado='Eliminado'
 where IdCuota= #{idCuota}
</update>

<!-- Egresos-->

<select id="getNextEgresos" resultType="java.lang.String">
	select max(IdEgreso) from EGRESO
</select>

<insert id="insertEgresos" parameterType="IngSoft.venta.bean.EgresoBeanData" flushCache="true">
	insert into EGRESO(IdEgreso,Descripcion,MontoTotal,FechaPago,Estado,IdConcepto)
	values (#{idEgreso},#{descripcion},#{montoTotal},#{fechaPago},'Activo',#{idConcepto})
</insert>


<select id="getEgreso" parameterType="java.lang.String"  resultType="IngSoft.venta.bean.EgresoBeanData">
select 
EGRESO.IdEgreso as idEgreso
,EGRESO.Descripcion as descripcion
,EGRESO.FechaPago as fechaPago
,EGRESO.MontoTotal as montoTotal
from EGRESO WHERE EGRESO.IdEgreso=#{codigo}
</select>


<select id="searchEgreso" parameterType="IngSoft.venta.bean.CriterioEgresoBeanData" resultType="IngSoft.venta.bean.ResultadoEgresoBeanData">
select 
EGRESO.IdEgreso as idEgreso
,EGRESO.Descripcion as descripcion
,EGRESO.FechaPago as fechaPago
,EGRESO.MontoTotal as montoTotal
from EGRESO
<where>
	<if test="descripcion != null">
	EGRESO.Descripcion like #{descripcion} 
  </if>
  
  
  <if test="fechaPagoIni != null">
        AND EGRESO.FechaPago &gt;= #{fechaPagoIni}
    </if>
    <if test="fechaPagoFin != null">
        AND EGRESO.FechaPago &lt;= #{fechaPagoFin}
    </if>
  
   
   ORDER BY EGRESO.fechaPago ASC
      
</where>
</select>

<!-- Ordenes de pago-->


<!-- Agregar plantilla membresia -->
<insert id="insertOtroIngreso" parameterType="IngSoft.venta.bean.OrdenPagoBeanData" flushCache="true">
	insert into INGRESO(IdIngreso,FechaPago,Estado,idOtroIngreso)
	values (#{idIngreso},#{fechaPago},'Cancelado',#{idOtroIngreso})
</insert>

 <!-- Modificar elemento -->
<update id="pagarOrdenPago" parameterType="IngSoft.venta.bean.OrdenPagoBeanData">
update OTRO_INGRESO set Estado='Cancelado'
 where IdOtroIngreso= #{idOtroIngreso}
</update>


<select id="searchOrdenPago" parameterType="IngSoft.venta.bean.CriterioOrdenPagoBeanData" resultType="IngSoft.venta.bean.ResultadoOrdenPagoBeanData">
select 
distinct PERSONA.IdPersona idSocio 
,OTRO_INGRESO.Descripcion as concepto
,OTRO_INGRESO.Descripcion2 as descripcion
,OTRO_INGRESO.IdOtroIngreso as idOtroIngreso
,OTRO_INGRESO.Monto as monto
,CONCAT(PERSONA.Nombres,' ',PERSONA.ApePaterno,' ',PERSONA.ApeMaterno) as socio
,OTRO_INGRESO.FechaEmision as fechaEmision
,OTRO_INGRESO.FechaVencimiento as fechaVencimiento
,OTRO_INGRESO.Estado as estado
,OTRO_INGRESO.IdConcepto as idConcepto
from OTRO_INGRESO, CONCEPTO, PERSONA, INGRESO
<where>
	<if test="socio != null">
	OTRO_INGRESO.IdConcepto=CONCEPTO.IdConcepto and CONCEPTO.IdSocio=PERSONA.IdPersona and (PERSONA.Nombres like #{socio} or PERSONA.ApePaterno like #{socio} or PERSONA.ApeMaterno like #{socio})
  </if>
  
  <if test="idSocio != null">
        AND PERSONA.IdPersona = #{idSocio}
    </if>
  
  <if test="fechaEmisionIni != null">
        AND OTRO_INGRESO.FechaEmision &gt;= #{fechaEmisionIni}
    </if>
    <if test="fechaEmisionFin != null">
        AND OTRO_INGRESO.FechaEmision &lt;= #{fechaEmisionFin}
    </if>
    
  <if test="concepto != null">
        AND OTRO_INGRESO.Descripcion= #{concepto}
       
    </if>
  
    <if test="estado != null">
        AND (OTRO_INGRESO.Estado= #{estado} or OTRO_INGRESO.Estado='Vencido')
       
    </if>
   ORDER BY OTRO_INGRESO.fechaVencimiento ASC
      
</where>
</select>


<select id="searchOrdenPagada" parameterType="IngSoft.venta.bean.CriterioOrdenPagoBeanData" resultType="IngSoft.venta.bean.ResultadoOrdenPagoBeanData">
select 
distinct PERSONA.IdPersona idSocio 
,OTRO_INGRESO.Descripcion as concepto
,OTRO_INGRESO.Descripcion2 as descripcion
,OTRO_INGRESO.IdOtroIngreso as idOtroIngreso
,OTRO_INGRESO.Monto as monto
,CONCAT(PERSONA.Nombres,' ',PERSONA.ApePaterno,' ',PERSONA.ApeMaterno) as socio
,OTRO_INGRESO.FechaEmision as fechaEmision
,OTRO_INGRESO.FechaVencimiento as fechaVencimiento
,OTRO_INGRESO.Estado as estado
,OTRO_INGRESO.IdConcepto as idConcepto
from OTRO_INGRESO, CONCEPTO, PERSONA, INGRESO
<where>
	<if test="socio != null">
	OTRO_INGRESO.IdConcepto=CONCEPTO.IdConcepto and INGRESO.IdOtroIngreso=OTRO_INGRESO.IdOtroIngreso and CONCEPTO.IdSocio=PERSONA.IdPersona and (PERSONA.Nombres like #{socio} or PERSONA.ApePaterno like #{socio} or PERSONA.ApeMaterno like #{socio})
  </if>
  
  <if test="idSocio != null">
        AND PERSONA.IdPersona = #{idSocio}
    </if>
   
  <if test="fechaPagoIni != null">
        AND INGRESO.FechaPago &gt;= #{fechaPagoIni}
    </if>
    <if test="fechaPagoFin != null">
        AND INGRESO.FechaPago &lt;= #{fechaPagoFin}
    </if>
  
    <if test="estado != null">
        AND INGRESO.Estado= #{estado}
       
    </if>
   ORDER BY OTRO_INGRESO.fechaVencimiento ASC
      
</where>
</select>


<select id="getOrdenPagoIngreso" parameterType="java.lang.String"  resultType="IngSoft.venta.bean.OrdenPagoBeanData">
Select
distinct PERSONA.IdPersona idSocio 
,OTRO_INGRESO.Descripcion as descripcion
,OTRO_INGRESO.IdOtroIngreso as idOtroIngreso
,OTRO_INGRESO.Monto as monto
,CONCAT(PERSONA.Nombres,' ',PERSONA.ApePaterno,' ',PERSONA.ApeMaterno) as socio
,OTRO_INGRESO.FechaEmision as fechaEmision
,OTRO_INGRESO.FechaVencimiento as fechaVencimiento
,OTRO_INGRESO.Estado as estado
,OTRO_INGRESO.IdConcepto as idConcepto
from OTRO_INGRESO, CONCEPTO, PERSONA, INGRESO
WHERE 
OTRO_INGRESO.IdConcepto=CONCEPTO.IdConcepto and CONCEPTO.IdSocio=PERSONA.IdPersona  and OTRO_INGRESO.IdOtroIngreso=#{codigo}
</select>

<select id="getNextCodigoOrden" resultType="java.lang.String">
	select max(IdConcepto) from CONCEPTO
</select>

<select id="getNextCodigoOtroIngreso" resultType="java.lang.String">
	select max(IdOtroIngreso) from OTRO_INGRESO
</select>

<insert id="insertOrdenPagoOtrosIngresos" parameterType="IngSoft.venta.bean.OrdenPagoBeanData" flushCache="true">
	insert into OTRO_INGRESO(IdOtroIngreso,IdConcepto,Monto,FechaEmision,FechaVencimiento,Estado,Descripcion,Descripcion2)
	values (#{idOtroIngreso},#{idConcepto},#{monto},#{fechaEmision},#{fechaVencimiento},'No Cancelado',#{descripcion},#{descripcionCuota})
</insert>



<insert id="insertOrdenPagoSolicitudProducto" parameterType="IngSoft.venta.bean.OrdenPagoBeanData" flushCache="true">
	insert into CONCEPTO(IdSolicitudProducto,IdConcepto,IdSocio,Fecha)
	values (#{idSolicitudProducto},#{idConcepto},#{idSocio},#{fecha})
</insert>

<insert id="insertOrdenPagoSolicitudServicio" parameterType="IngSoft.venta.bean.OrdenPagoBeanData" flushCache="true">
	insert into CONCEPTO(IdSolicitudServicio,IdConcepto,IdSocio,Fecha)
	values (#{idSolicitudServicio},#{idConcepto},#{idSocio},#{fecha})
</insert>

<insert id="insertOrdenPagoEventoCorp" parameterType="IngSoft.venta.bean.OrdenPagoBeanData" flushCache="true">
	insert into CONCEPTO(IdEventoCorp,IdConcepto,IdSocio,Fecha)
	values (#{idEventoCorp},#{idConcepto},#{idSocio},#{fecha})
</insert>

<insert id="insertOrdenPagoEventoCorporativoxServicioAdicional" parameterType="IngSoft.venta.bean.OrdenPagoBeanData" flushCache="true">
	insert into CONCEPTO(IdEventoCorp,IdServAdicional,IdConcepto,IdSocio,Fecha)
	values (#{idEventoCorp},#{idServAdicional},#{idConcepto},#{idSocio},#{fecha})
</insert>

<insert id="insertOrdenPagoReservaBungalowxServicioAdicional" parameterType="IngSoft.venta.bean.OrdenPagoBeanData" flushCache="true">
	insert into CONCEPTO(IdReservaBungalow,IdServAdicional,IdConcepto,IdSocio,Fecha)
	values (#{idReservaBungalow},#{idServAdicional},#{idConcepto},#{idSocio},#{fecha})
</insert>

<insert id="insertOrdenPagoBungalowxSorteo" parameterType="IngSoft.venta.bean.OrdenPagoBeanData" flushCache="true">
	insert into CONCEPTO(IdBungalow,IdSorteo,IdConcepto,IdSocio,Fecha)
	values (#{idBungalow},#{idSorteo},#{idConcepto},#{idSocio},#{fecha})
</insert>

<insert id="insertOrdenPagoEventoSocio" parameterType="IngSoft.venta.bean.OrdenPagoBeanData" flushCache="true">
	insert into CONCEPTO(IdEventoSocio,IdConcepto,IdSocio,Fecha)
	values (#{idEventoSocio},#{idConcepto},#{idSocio},#{fecha})
</insert>

<insert id="insertOrdenPagoReservaCancha" parameterType="IngSoft.venta.bean.OrdenPagoBeanData" flushCache="true">
	insert into CONCEPTO(IdReservaCancha,IdConcepto,IdSocio,Fecha)
	values (#{idReservaCancha},#{idConcepto},#{idSocio},#{fecha})
</insert>

<insert id="insertOrdenPagoReservaBungalow" parameterType="IngSoft.venta.bean.OrdenPagoBeanData" flushCache="true">
	insert into CONCEPTO(IdReservaBungalow,IdConcepto,IdSocio,Fecha)
	values (#{idReservaBungalow},#{idConcepto},#{idSocio},#{fecha})
</insert>

<insert id="insertOrdenPagoActividadSocio" parameterType="IngSoft.venta.bean.OrdenPagoBeanData" flushCache="true">
	insert into CONCEPTO(IdActividad,IdConcepto,IdSocio,Fecha)
	values (#{idActividad},#{idConcepto},#{idSocio},#{fecha})
</insert>

<insert id="insertOrdenPagoActividadFamiliar" parameterType="IngSoft.venta.bean.OrdenPagoBeanData" flushCache="true">
	insert into CONCEPTO(IdActividad, IdFamiliar,IdConcepto,IdSocio,Fecha)
	values (#{idActividad},#{idFamiliar},#{idConcepto},#{idSocio},#{fecha})
</insert>

<insert id="insertOrdenPagoSuspensionFalta" parameterType="IngSoft.venta.bean.OrdenPagoBeanData" flushCache="true">
	insert into CONCEPTO(IdSuspensionFalta,IdConcepto,IdSocio,Fecha)
	values (#{idSuspensionFalta},#{idConcepto},#{idSocio},#{fecha})
</insert>

<insert id="insertOrdenPagoSocioxEventoSede" parameterType="IngSoft.venta.bean.OrdenPagoBeanData" flushCache="true">
	insert into CONCEPTO(IdEventoSede,IdConcepto,IdSocio,Fecha)
	values (#{idEventoSede},#{idConcepto},#{idSocio},#{fecha})
</insert>

<insert id="insertOrdenPagoInvitadoxSocio" parameterType="IngSoft.venta.bean.OrdenPagoBeanData" flushCache="true">
	insert into CONCEPTO(IdInvitado,IdConcepto,IdSocio,Fecha)
	values (#{idInvitado},#{idConcepto},#{idSocio},#{fecha})
</insert>

<insert id="insertOrdenPagoTrasladoMembresia" parameterType="IngSoft.venta.bean.OrdenPagoBeanData" flushCache="true">
	insert into CONCEPTO(IdMembresiaAnt,IdMembresiaNue,IdConcepto,IdSocio,Fecha)
	values (#{idMembresiaAnt},#{idMembresiaNue},#{idConcepto},#{idSocio},#{fecha})
</insert>

<insert id="insertOrdenPagoCuotaExtra" parameterType="IngSoft.venta.bean.OrdenPagoBeanData" flushCache="true">
	insert into CONCEPTO(IdConcepto,IdSocio,Fecha)
	values (#{idConcepto},#{idSocio},#{fecha})
</insert>

 <select id="searchSocioNoMembresia" parameterType="IngSoft.venta.bean.CriterioSocioBeanData" resultType="IngSoft.venta.bean.ResultadoSocioBeanData">
select distinct
SOCIO.IdSocio as idSocio
,SOCIO.Direccion as direccion
,PERSONA.Nombres as nombres
,PERSONA.ApePaterno as apellidoPaterno
,PERSONA.ApeMaterno as apellidoMaterno
,PERSONA.TipoDocumento as tipoDocumento
,PERSONA.NumeroDocumento as numeroDocumento
,SOCIO.Flag as flag
from SOCIO INNER JOIN  PERSONA ON PERSONA.IdPersona=SOCIO.IdSocio
INNER JOIN MEMBRESIA ON MEMBRESIA.IdSocio!=SOCIO.IdSocio 

<where>

	<if test="nombres != null ">
	PERSONA.IdPersona!=MEMBRESIA.IdSocio AND PERSONA.IdPersona NOT IN (SELECT IdSocio FROM MEMBRESIA) AND (PERSONA.nombres  like  #{nombres})
    </if>
    <if test="apellidoPaterno != null ">
        AND (PERSONA.ApePaterno  like  #{apellidoPaterno})
    </if>
    <if test="apellidoMaterno != null ">
        AND (PERSONA.ApeMaterno  like  #{apellidoMaterno})
    </if>
    <if test="direccion != null">
        AND SOCIO.Direccion like #{direccion}
    </if>
     <if test="tipoDocumento != null">
        AND PERSONA.TipoDocumento like #{tipoDocumento}
    </if>
    
</where>
</select>




<select id="cantMultas" parameterType="IngSoft.venta.bean.CriterioSocioBeanData" resultType="IngSoft.venta.bean.ResultadoSocioBeanData">
select distinct
SOCIO.IdSocio as idSocio
,SOCIO.Direccion as direccion
,PERSONA.Nombres as nombres
,PERSONA.ApePaterno as apellidoPaterno
,PERSONA.ApeMaterno as apellidoMaterno
,PERSONA.TipoDocumento as tipoDocumento
,PERSONA.NumeroDocumento as numeroDocumento
,SOCIO.Flag as flag
from SOCIO INNER JOIN  PERSONA ON PERSONA.IdPersona=SOCIO.IdSocio
INNER JOIN MEMBRESIA ON MEMBRESIA.IdSocio!=SOCIO.IdSocio 

<where>

	<if test="nombres != null ">
	PERSONA.IdPersona!=MEMBRESIA.IdSocio AND PERSONA.IdPersona NOT IN (SELECT IdSocio FROM MEMBRESIA) AND (PERSONA.nombres  like  #{nombres})
    </if>
    <if test="apellidoPaterno != null ">
        AND (PERSONA.ApePaterno  like  #{apellidoPaterno})
    </if>
    <if test="apellidoMaterno != null ">
        AND (PERSONA.ApeMaterno  like  #{apellidoMaterno})
    </if>
    <if test="direccion != null">
        AND SOCIO.Direccion like #{direccion}
    </if>
     <if test="tipoDocumento != null">
        AND PERSONA.TipoDocumento like #{tipoDocumento}
    </if>
    
</where>
</select>





<select id="getCantMultas" resultType="java.lang.String">
	select count(*) as cantidad from CUOTA where FechaVencimiento&lt;NOW() and Estado='No Cancelado'
</select>


<update id="generarMulta" parameterType="IngSoft.venta.bean.PagoBeanData">
update CUOTA set Estado='Vencido', Monto=Monto*#{multa}, Multa=1.0
 where  FechaVencimiento&lt;NOW()  and Estado='No Cancelado'
</update>

<select id="getCantMultasExtra" parameterType="IngSoft.venta.bean.PagoBeanData" resultType="java.lang.String">
	select count(*) as cantidad from OTRO_INGRESO where FechaVencimiento&lt;NOW()  and Estado='No Cancelado' and Descripcion='CUOTAEXTRAORDINARIA'
</select>


<update id="generarMultaExtra" parameterType="IngSoft.venta.bean.PagoBeanData">
update OTRO_INGRESO set Estado='Vencido', Monto=Monto*#{multa}
 where  FechaVencimiento&lt;NOW()  and Estado='No Cancelado' and Descripcion='CUOTAEXTRAORDINARIA'
</update>


<select id="getFlujoCaja" parameterType="java.lang.String" resultType="IngSoft.venta.bean.ResultadoFlujoCajaBeanData">
(Select
OTRO_INGRESO.Descripcion as Concepto, 
(Select sum(OI.Monto) as monto FROM OTRO_INGRESO OI, INGRESO I WHERE OI.Descripcion=Concepto and OI.IdOtroIngreso=I.IdOtroIngreso and YEAR(I.FechaPago)=#{anho} and MONTH(I.FechaPago)='01')  as Enero,
(Select sum(OI.Monto) as monto FROM OTRO_INGRESO OI, INGRESO I WHERE OI.Descripcion=Concepto and OI.IdOtroIngreso=I.IdOtroIngreso and YEAR(I.FechaPago)=#{anho} and MONTH(I.FechaPago)='02')   as Febrero,
(Select sum(OI.Monto) as monto FROM OTRO_INGRESO OI, INGRESO I WHERE OI.Descripcion=Concepto and OI.IdOtroIngreso=I.IdOtroIngreso and YEAR(I.FechaPago)=#{anho} and MONTH(I.FechaPago)='03')   as Marzo,
(Select sum(OI.Monto) as monto FROM OTRO_INGRESO OI, INGRESO I WHERE OI.Descripcion=Concepto and OI.IdOtroIngreso=I.IdOtroIngreso and YEAR(I.FechaPago)=#{anho} and MONTH(I.FechaPago)='04')  as Abril,
(Select sum(OI.Monto) as monto FROM OTRO_INGRESO OI, INGRESO I WHERE OI.Descripcion=Concepto and OI.IdOtroIngreso=I.IdOtroIngreso and YEAR(I.FechaPago)=#{anho} and MONTH(I.FechaPago)='05')  as Mayo,
(Select sum(OI.Monto) as monto FROM OTRO_INGRESO OI, INGRESO I WHERE OI.Descripcion=Concepto and OI.IdOtroIngreso=I.IdOtroIngreso and YEAR(I.FechaPago)=#{anho} and MONTH(I.FechaPago)='06')  as Junio,
(Select sum(OI.Monto) as monto FROM OTRO_INGRESO OI, INGRESO I WHERE OI.Descripcion=Concepto and OI.IdOtroIngreso=I.IdOtroIngreso and YEAR(I.FechaPago)=#{anho} and MONTH(I.FechaPago)='07')  as Julio,
(Select sum(OI.Monto) as monto FROM OTRO_INGRESO OI, INGRESO I WHERE OI.Descripcion=Concepto and OI.IdOtroIngreso=I.IdOtroIngreso and YEAR(I.FechaPago)=#{anho} and MONTH(I.FechaPago)='08')  as Agosto,
(Select sum(OI.Monto) as monto FROM OTRO_INGRESO OI, INGRESO I WHERE OI.Descripcion=Concepto and OI.IdOtroIngreso=I.IdOtroIngreso and YEAR(I.FechaPago)=#{anho} and MONTH(I.FechaPago)='09')  as Septiembre,
(Select sum(OI.Monto) as monto FROM OTRO_INGRESO OI, INGRESO I WHERE OI.Descripcion=Concepto and OI.IdOtroIngreso=I.IdOtroIngreso and YEAR(I.FechaPago)=#{anho} and MONTH(I.FechaPago)='10')  as Octubre,
(Select sum(OI.Monto) as monto FROM OTRO_INGRESO OI, INGRESO I WHERE OI.Descripcion=Concepto and OI.IdOtroIngreso=I.IdOtroIngreso and YEAR(I.FechaPago)=#{anho} and MONTH(I.FechaPago)='11')  as Noviembre,
(Select sum(OI.Monto) as monto FROM OTRO_INGRESO OI, INGRESO I WHERE OI.Descripcion=Concepto and OI.IdOtroIngreso=I.IdOtroIngreso and YEAR(I.FechaPago)=#{anho} and MONTH(I.FechaPago)='12')  as Diciembre


 from OTRO_INGRESO, INGRESO GROUP BY Descripcion)
UNION (
Select 
'MEMBRESIA' as Concepto, 
(Select sum(C.Monto) as monto FROM CUOTA C, INGRESO I WHERE  C.IdCuota=I.IdCuota and YEAR(I.FechaPago)=#{anho} and MONTH(I.FechaPago)='01')  as Enero,
(Select sum(C.Monto) as monto FROM CUOTA C, INGRESO I WHERE  C.IdCuota=I.IdCuota and YEAR(I.FechaPago)=#{anho} and MONTH(I.FechaPago)='02')   as Febrero,
(Select sum(C.Monto) as monto FROM CUOTA C, INGRESO I WHERE  C.IdCuota=I.IdCuota and YEAR(I.FechaPago)=#{anho} and MONTH(I.FechaPago)='03')   as Marzo,
(Select sum(C.Monto) as monto FROM CUOTA C, INGRESO I WHERE  C.IdCuota=I.IdCuota and YEAR(I.FechaPago)=#{anho} and MONTH(I.FechaPago)='04')  as Abril,
(Select sum(C.Monto) as monto FROM CUOTA C, INGRESO I WHERE  C.IdCuota=I.IdCuota and YEAR(I.FechaPago)=#{anho} and MONTH(I.FechaPago)='05')  as Mayo,
(Select sum(C.Monto) as monto FROM CUOTA C, INGRESO I WHERE  C.IdCuota=I.IdCuota and YEAR(I.FechaPago)=#{anho} and MONTH(I.FechaPago)='06') as Junio,
(Select sum(C.Monto) as monto FROM CUOTA C, INGRESO I WHERE  C.IdCuota=I.IdCuota and YEAR(I.FechaPago)=#{anho} and MONTH(I.FechaPago)='07')  as Julio,
(Select sum(C.Monto) as monto FROM CUOTA C, INGRESO I WHERE  C.IdCuota=I.IdCuota and YEAR(I.FechaPago)=#{anho} and MONTH(I.FechaPago)='08')  as Agosto,
(Select sum(C.Monto) as monto FROM CUOTA C, INGRESO I WHERE  C.IdCuota=I.IdCuota and YEAR(I.FechaPago)=#{anho} and MONTH(I.FechaPago)='09')  as Septiembre,
(Select sum(C.Monto) as monto FROM CUOTA C, INGRESO I WHERE  C.IdCuota=I.IdCuota and YEAR(I.FechaPago)=#{anho} and MONTH(I.FechaPago)='10')  as Octubre,
(Select sum(C.Monto) as monto FROM CUOTA C, INGRESO I WHERE  C.IdCuota=I.IdCuota and YEAR(I.FechaPago)=#{anho} and MONTH(I.FechaPago)='11')  as Noviembre,
(Select sum(C.Monto) as monto FROM CUOTA C, INGRESO I WHERE  C.IdCuota=I.IdCuota and YEAR(I.FechaPago)=#{anho} and MONTH(I.FechaPago)='12')  as Diciembre


 from CUOTA, INGRESO GROUP BY Concepto

) UNION(
Select 
'EGRESOS' as Concepto, 
(Select sum(E.MontoTotal) as monto FROM EGRESO E WHERE  YEAR(E.FechaPago)=#{anho} and MONTH(E.FechaPago)='01')  as Enero,
(Select sum(E.MontoTotal) as monto FROM EGRESO E WHERE  YEAR(E.FechaPago)=#{anho} and MONTH(E.FechaPago)='02')   as Febrero,
(Select sum(E.MontoTotal) as monto FROM EGRESO E WHERE  YEAR(E.FechaPago)=#{anho} and MONTH(E.FechaPago)='03')   as Marzo,
(Select sum(E.MontoTotal) as monto FROM EGRESO E WHERE  YEAR(E.FechaPago)=#{anho} and MONTH(E.FechaPago)='04')  as Abril,
(Select sum(E.MontoTotal) as monto FROM EGRESO E WHERE  YEAR(E.FechaPago)=#{anho} and MONTH(E.FechaPago)='05')  as Mayo,
(Select sum(E.MontoTotal) as monto FROM EGRESO E WHERE  YEAR(E.FechaPago)=#{anho} and MONTH(E.FechaPago)='06') as Junio,
(Select sum(E.MontoTotal) as monto FROM EGRESO E WHERE  YEAR(E.FechaPago)=#{anho} and MONTH(E.FechaPago)='07')  as Julio,
(Select sum(E.MontoTotal) as monto FROM EGRESO E WHERE  YEAR(E.FechaPago)=#{anho} and MONTH(E.FechaPago)='08')  as Agosto,
(Select sum(E.MontoTotal) as monto FROM EGRESO E WHERE  YEAR(E.FechaPago)=#{anho} and MONTH(E.FechaPago)='09')  as Septiembre,
(Select sum(E.MontoTotal) as monto FROM EGRESO E WHERE  YEAR(E.FechaPago)=#{anho} and MONTH(E.FechaPago)='10')  as Octubre,
(Select sum(E.MontoTotal) as monto FROM EGRESO E WHERE  YEAR(E.FechaPago)=#{anho} and MONTH(E.FechaPago)='11')  as Noviembre,
(Select sum(E.MontoTotal) as monto FROM EGRESO E WHERE  YEAR(E.FechaPago)=#{anho} and MONTH(E.FechaPago)='12')  as Diciembre


 from CUOTA, INGRESO GROUP BY Concepto


)
</select>

</mapper>