<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Data.servicio.evento">

  <cache />

<select id="searchPlantillaEvento" parameterType="IngSoft.servicio.bean.CriterioEventoBeanData" resultType="IngSoft.servicio.bean.ResultadoEventoBeanData">
select 
PLANTILLA_EVENTO.IdPlantillaEvento as codigo
,TIPO_EVENTO.nombre as tipo
,PLANTILLA_EVENTO.nombre as nombre
,PLANTILLA_EVENTO.FechaInicio as limInicio
,PLANTILLA_EVENTO.FechaFin as limFin
from PLANTILLA_EVENTO 
left JOIN TIPO_EVENTO on TIPO_EVENTO.IdTipoEvento=PLANTILLA_EVENTO.IdTipoEvento 
<where>
<if test="nombre != null ">
        PLANTILLA_EVENTO.nombre  like  #{nombre}
    </if>
    <if test="tipo != null and tipo.length()>1">
        AND TIPO_EVENTO.IdTipoEvento = #{tipo}
    </if>
    <if test="limInicio != null">
        AND PLANTILLA_EVENTO.FechaInicio &gt;= #{limInicio}
    </if>
    <if test="limFin != null">
        AND PLANTILLA_EVENTO.FechaFin &lt;= #{limFin}
    </if>
    AND PLANTILLA_EVENTO.Estado='A'
</where>
order by 1 asc
</select>
<select id="searchEventoSedeMini" parameterType="hashmap" resultType="IngSoft.servicio.bean.EventoBeanData">
select 
es.IdEventoSede as codigo
,es.Nombre as nombre
,es.Fecha as fecha
,s.Nombre as idSede
,es.Estado as estado
from 
EVENTO_SEDE es
, SEDE s 
where 
es.IdSede= s.IdSede
and es.Estado like #{estado}
and es.IdSede like #{sede}
and DATE(es.Fecha) &gt;= DATE(#{FI})
and DATE(es.Fecha) &lt;= DATE(#{FF})
and es.Nombre like #{nombre}
order by 3
</select>

<select id="searchEventoSocioMini" parameterType="hashmap" resultType="IngSoft.servicio.bean.EventoBeanData">
select 
so.IdEventoSocio as codigo
,so.Nombre as nombre
,so.Fecha as fecha
,s.Nombre as idSede
,so.Estado as estado
from 
EVENTO_SOCIO so
, SEDE s 
where 
so.IdSede= s.IdSede
and so.Estado like #{estado}
and so.IdSede like #{sede}
and DATE(so.Fecha) &gt;= DATE(#{FI})
and DATE(so.Fecha) &lt;= DATE(#{FF})
and so.Nombre like #{nombre}
and so.IdSocio like #{socio}
order by 3
</select>
<select id="searchEventoCorpMini" parameterType="hashmap" resultType="IngSoft.servicio.bean.EventoBeanData">
select 
ec.IdEventoCorp as codigo
,ec.Nombre as nombre
,ec.Fecha as fecha
,s.Nombre as idSede
,ec.Estado as estado
from 
EVENTO_CORPORATIVO ec
, SEDE s 
where 
ec.IdSede= s.IdSede
and ec.Estado like #{estado}
and ec.IdSede like #{sede}
and DATE(ec.Fecha) &gt;= DATE(#{FI})
and DATE(ec.Fecha) &lt;= DATE(#{FF})
and ec.Nombre like #{nombre}
and ec.IdPersonaJuridica like #{corporativo}
order by 3
</select>


<select id="searchSedeMini" resultType="IngSoft.servicio.bean.SedeMiniBeanData">
	select IdSede as codigo
	,Nombre 
	from 
	SEDE
	order by 1
</select>

<select id="searchAmbienteMini" resultType="IngSoft.servicio.bean.AmbienteMiniBeanData">
	select IdTipoAmbiente as codigo
	,Nombre 
	from 
	TIPO_AMBIENTE 
	order by 1
</select>
<select id="searchTipoEventoMini" resultType="IngSoft.servicio.bean.TipoEventoMiniBeanData">
	select IdTipoEvento as codigo
	,Nombre 
	from 
	TIPO_EVENTO
	order by 1
</select>

<!--Aprobar eventos  -->
<update id="aprobarEventoSocio" parameterType="java.lang.String">
	update EVENTO_SOCIO set Estado='APROBADO' where IdEventoSocio=#{codigo};	
</update>
<update id="aprobarEventoSede" parameterType="java.lang.String">
	update EVENTO_SEDE set Estado='APROBADO' where IdEventoSede=#{codigo};	
</update>
<update id="aprobarEventoCorp" parameterType="java.lang.String">
	update EVENTO_CORPORATIVO set Estado='APROBADO' where IdEventoCorp=#{codigo};	
</update>
<!-- Fin aprobar eventos -->
<!-- Anular eventos -->
<update id="anularEventoSocio" parameterType="java.lang.String">
	update EVENTO_SOCIO set Estado='ANULADO' where IdEventoSocio=#{codigo};	
</update>
<update id="anularEventoSede" parameterType="java.lang.String">
	update EVENTO_SEDE set Estado='ANULADO' where IdEventoSede=#{codigo};	
</update>
<update id="anularEventoCorp" parameterType="java.lang.String">
	update EVENTO_CORPORATIVO set Estado='ANULADO' where IdEventoCorp=#{codigo}; 	
</update>
<update id="anularEventoCorpMasivo" parameterType="hashmap">
update EVENTO_CORPORATIVO set Estado='ANULADO' where Date(Fecha)=Date(#{fecha}) and IdSede = #{sede};
</update>
<update id="anularEventoSedeMasivo" parameterType="hashmap">
update EVENTO_SEDE set Estado='ANULADO' where Date(Fecha)=Date(#{fecha}) and IdSede = #{sede};
</update>
<update id="anularEventoSocioMasivo" parameterType="hashmap">
update EVENTO_SOCIO set Estado='ANULADO' where Date(Fecha)=Date(#{fecha}) and IdSede = #{sede};
</update>


<!-- Fin Anular eventos -->
<!-- Generar codigos -->
<select id="getNextCodigoSdE" resultType="java.lang.String">
	select Max(IdEventoSede) from  EVENTO_SEDE	
</select>
<select id="getNextCodigoScE" resultType="java.lang.String">
	select Max(IdEventoSocio) from  EVENTO_SOCIO	
</select>
<select id="getNextCodigoSjE" resultType="java.lang.String">
	select Max(IdEventoCorp) from  EVENTO_CORPORATIVO	
</select>
<!-- Fin generar codigo -->
<!-- insertar solicitudes -->
<insert id="insertEventoxSede" parameterType="hashmap">
insert into 
EVENTO_SEDE(IdEventoSede,Nombre,LimiteEntradas,Precio,PrecioEntradaInvitado,IdSede,IdConcesionario,Estado,Fecha,EntradasTotal)
values
(#{codigo},#{nombre},#{limiteE},#{precio},#{precioI},#{sede},#{concesionario},'REGISTRADO',#{fecha},0)
</insert>
<insert id="insertEventoxSocio" parameterType="hashmap">
insert into 
EVENTO_SOCIO
(IdEventoSocio,Nombre,IdSocio,IdSede,Fecha,MontoTotal,IdConcesionario,Estado)
values(#{codigo},#{nombre},#{socio},#{sede},#{fecha},#{monto},#{concesionario},'REGISTRADO')
</insert>
 <!-- Fin insertar solicitudes  -->
 
<select id="getAmbientesId" parameterType="java.lang.String"  resultType="java.lang.String">
select IdAmbiente from AMBIENTExPLANTILLA where IdPlantillaEvento= #{codigo};
</select>

<select id="getSedesId" parameterType="java.lang.String"  resultType="java.lang.String">
select IdSede  from SEDExPLANTILLA where IdPlantillaEvento= #{codigo};
</select>
<!-- consultar solicitudes -->
<select id="getConcecionarioxSede" parameterType="hashmap" resultType="IngSoft.servicio.bean.ConcesionarioMiniBeanData">
select c.IdConcesionario as codigo
,c.RazonSocial as razonSocial
,c.Descripcion as descripcion
from
CONCESIONARIO c
,CONCESIONARIOxSEDE cs 
where 
c.IdConcesionario= cs.IdConcesionario
and cs.IdSede like #{idsede}
and DATE(cs.FechaFin)&gt;=DATE(#{fecha})
and DATE(cs.FechaInicio)&lt;=DATE(#{fecha})
</select>
<select id="searchEventoSede" parameterType="java.lang.String" resultType="IngSoft.servicio.bean.EventoBeanData">
select 
es.IdEventoSede as codigo
,es.Nombre as nombre
,es.Fecha as fecha
,es.IdSede as idSede
,es.Estado as estado
,es.IdConcesionario as idConcesionario
,es.LimiteEntradas as limiteEntradas
,es.Precio as monto
,es.EntradasTotal as entradasTotal
from 
EVENTO_SEDE es
where 
es.IdEventoSede like #{codigo}
</select>
<select id="searchEventoSocio" parameterType="java.lang.String" resultType="IngSoft.servicio.bean.EventoBeanData">
SELECT
IdEventoSocio as codigo,
Nombre as nombre,
IdSocio as socio,
IdSede as idSede,
Fecha as fecha,
MontoTotal as monto,
IdConcesionario as idConcesionario,
Estado as estado
FROM EVENTO_SOCIO 
where
IdEventoSocio like #{codigo};
</select>
<select id="searchEventoCorp"  parameterType="java.lang.String" resultType="IngSoft.servicio.bean.EventoBeanData">
SELECT
IdEventoCorp as codigo,
Nombre as nombre,
IdPersonaJuridica as juridica,
IdSede as idSede,
Fecha as fecha,
MontoTotal as monto,
IdConcesionario as idConcesionario,
Estado as estado
FROM EVENTO_CORPORATIVO  
where
IdEventoCorp like #{codigo}
;
</select>
<select id="getInvitadosEventosCorp" parameterType="java.lang.String" resultType="IngSoft.servicio.bean.InvitadosMiniBeanData">
select 
ie.Dni,ie.Nombres,ie.ApePaterno,ie.ApeMaterno
from 
INVITADOxEVENTO_CORP iec
,INVITADO_EVENTO ie 
where iec.Dni=ie.Dni
and iec.IdEventoCorp like #{codigo}
</select>

<!-- consultar solicitudes -->
<!-- Modificar elemento -->
<update id="updatePLantillaEvento" parameterType="IngSoft.servicio.bean.EventoBeanData">
update PLANTILLA_EVENTO set nombre=#{nombre}
 ,IdTipoEvento=#{idTipo}
 ,FechaInicio=#{limiteInicio}
 ,FechaFin=#{limiteFin}
 where IdPlantillaEvento= #{codigo}
</update>

<!-- Fin modificar -->
<!--Inscribir en Evento sede -->
<insert id="inscribirEventoSede" parameterType="hashmap">
INSERT INTO SOCIOxEVENTO_SEDE (IdSocio,IdEventoSede,CantEntrAdquiridas,Monto)
VALUES (#{socio},#{codigo},#{cantidad},#{monto})   
</insert>
<update id="actEntradasEventoSede" parameterType="map">
update 
EVENTO_SEDE es 
set  
es.EntradasTotal= es.EntradasTotal+#{cantidad}
where 
es.IdEventoSede = #{codigo};
</update>
<select id="searchEventoSedeMiniSocio" parameterType="hashmap" resultType="IngSoft.servicio.bean.EventoBeanData">
select 
es.IdEventoSede as codigo
,es.Nombre as nombre
,es.Fecha as fecha
,s.Nombre as idSede
,es.Estado as estado
,case when ses.IdSocio is null then 'NO'			
	  when ses.IdSocio is not null then 'SI'				
		END as registrado

from 
SEDE s 
,EVENTO_SEDE es
left join 
SOCIOxEVENTO_SEDE ses
on es.IdEventoSede=ses.IdEventoSede
where 
es.IdSede= s.IdSede
and (ses.IdSocio=#{socio} or ses.IdSocio is null)
and es.Estado like #{estado}
and es.IdSede like #{sede}
and DATE(es.Fecha) &gt;= DATE(#{FI})
and DATE(es.Fecha) &lt;= DATE(#{FF})
and es.Nombre like #{nombre}
</select>
<!-- Fin Inscribir en Evento sede -->
<select id="getServiciosAdicionales" parameterType="java.lang.String"  resultType="IngSoft.servicio.bean.ServicioAdicionalBeanData">
SELECT
sa.IdServAdicional as codigo,
sa.Nombre,
sa.Tipo,
sa.Monto,
sa.Descripcion,
sa.Estado
,case when ecsa.IdEventoCorp is null then 'NO'			
	  when ecsa.IdEventoCorp is not null then 'SI'				
		END as Registrado
FROM 
SERV_ADICIONAL sa
left join 
EVENTO_CORPxSERV_ADICIONAL ecsa
on sa.IdServAdicional=ecsa.IdServAdicional
where sa.Estado='Activo'
and sa.Tipo ='Corporativo'
and (ecsa.IdEventoCorp = #{codigo} or ecsa.IdEventoCorp is null)
order by 3,4
</select>
<select id="getjuridica" parameterType="java.lang.String" resultType="IngSoft.servicio.bean.PersonaJuridicaBeanData">
select 
IdPersonaJuridica as codigo,
RazonSocial as razonSocial,
Ruc as ruc,
Direccion as direccion,
Telefono as telefono,
Correo as Correo,
IdDistrito as IdDistrito,
Estado as Estado
from PERSONA_JURIDICA p where p.Ruc = #{codigo}; 

</select>
<insert id="insertInvitado" parameterType="hashmap" flushCache="true">
insert ignore into INVITADO_EVENTO (Dni,Nombres,ApePaterno,ApeMaterno) values(#{dni},#{nombre},#{apepat},#{apemat});
</insert>

<insert id="insertInvitadoEvento" parameterType="hashmap" flushCache="true">
insert ignore into INVITADOxEVENTO_CORP(Dni,IdEventoCorp) values (#{dni},#{codigo});
</insert>
<insert id="insertEventoCorporativo" parameterType="hashmap" flushCache="true">
insert into EVENTO_CORPORATIVO(IdEventoCorp,Nombre,IdSede,IdPersonaJuridica,Fecha,MontoTotal,IdConcesionario,Estado) 
values(#{codigo},#{nombre},#{sede},#{corporativo},#{fecha},#{monto},#{concesionario},'REGISTRADO');
</insert>

</mapper>